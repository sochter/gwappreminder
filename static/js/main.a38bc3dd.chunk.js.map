{"version":3,"sources":["useAppointments.ts","AppointmentCard.tsx","i18n/Language.tsx","useAppointmentReminder.ts","encrypt.tsx","Login.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["queryAppointments","userCredentials","a","axios","get","auth","username","password","params","startOfToday","dayjs","startOf","toISOString","validateStatus","response","status","type","console","log","data","map","convertGenesisAppointments","Error","appointment","id","name","location","start","end","useStyles","makeStyles","root","minWidth","margin","fontSize","startEnd","textAlign","AppointmentCard","onClick","classes","Card","className","CardContent","Typography","gutterBottom","format","component","color","browserLanguage","navigator","language","startsWith","LanguageContext","createContext","setLanguage","useLanguage","useContext","LanguageProvider","locale","children","useStorageState","localStorage","useLocalStorageLanguage","Provider","value","messages","translationsEn","translationsDe","ALREADY_REMINDED_APPOINTMENT_IDS_KEY","getAlreadyRemindedAppointmentIds","json","sessionStorage","getItem","JSON","parse","e","error","appointmentReminderHandler","options","intl","now","minutes","Math","max","diff","notification","formatMessage","visualNotification","Notification","requestPermission","speechNotification","voice","speechSynthesis","getVoices","filter","lang","utterance","SpeechSynthesisUtterance","speak","setItem","stringify","concat","useFixedTimeout","handleRef","useRef","useIntl","useEffect","current","clearTimeout","undefined","milliseconds","mintesBefore","setTimeout","importPublicKey","pem","pemContents","substring","length","withoutNewLine","replaceAll","binaryDerString","window","atob","binaryDer","str2ab","crypto","subtle","importKey","hash","str","buf","ArrayBuffer","bufView","Uint8Array","i","strLen","charCodeAt","ab2str","buffer","binary","bytes","len","byteLength","String","fromCharCode","btoa","encrypt","text","publicKey","enc","TextEncoder","encode","encodedEncrypted","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","width","submit","Login","loginFailed","onLogin","usernameRef","passwordRef","Container","maxWidth","CssBaseline","Avatar","variant","noValidate","TextField","inputRef","required","fullWidth","label","autoComplete","autoFocus","Button","then","encrypted","FormHelperText","createStyles","flexGrow","menuButton","marginRight","title","App","setUserCredentials","useState","appointments","loading","loggedIn","authorizationFailed","result","setResult","queryResult","catch","reason","useAppointments","sortedAppointments","skipIds","indexOf","isAfter","useAppointmentReminder","AppBar","position","Toolbar","FormControl","Select","labelId","onChange","event","target","MenuItem","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","localizedFormat","require","extend","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAqFMA,EAAiB,uCAAG,WACxBC,GADwB,eAAAC,EAAA,sEAGDC,IAAMC,IAL7B,+EAKoE,CAClEC,KAAM,CACJC,SAAUL,EAAgBK,SAC1BC,SAAUN,EAAgBM,UAE5BC,OAAQ,CACNC,aAAcC,MAAQC,QAAQ,OAAOC,eAEvCC,eAAgB,kBAAM,KAXA,UAcA,OAXlBC,EAHkB,QAcXC,OAdW,yCAef,CACLC,KAAM,qBAhBc,UAmBA,MAApBF,EAASC,OAnBW,uBAoBtBE,QAAQC,IAAI,WAAYJ,EAASK,MApBX,kBAqBfL,EAASK,KAAKC,IAAIC,IArBH,aAuBlBC,MAAM,qBAAuBR,EAASC,QAvBpB,2CAAH,sDA0BjBM,EAA6B,SACjCE,GADiC,MAEhB,CACjBC,GAAID,EAAYC,GAChBC,KAAMF,EAAYE,KAClBC,SAAUH,EAAYG,SACtBC,MAAOjB,IAAMa,EAAYI,OACzBC,IAAKlB,IAAMa,EAAYK,O,GAOdlB,IAAM,4BACRA,IAAM,4BAOJA,IAAM,4BACRA,IAAM,4BAOJA,IAAM,4BACRA,IAAM,4BAMJA,IAAM,4BACRA,IAAM,4B,0CC9ITmB,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,IACVC,OAAQ,OAEVR,KAAM,CACJS,SAAU,SAEZC,SAAU,CACRD,SAAU,OAEZR,SAAU,CACRU,UAAW,OACXF,SAAU,SAIDG,EAGR,SAAC,GAA8B,IAA5Bd,EAA2B,EAA3BA,YAAae,EAAc,EAAdA,QACbC,EAAUV,IAChB,OACE,cAACW,EAAA,EAAD,CAAMC,UAAWF,EAAQR,KAAMO,QAAS,kBAAMA,EAAQf,IAAtD,SACE,eAACmB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYF,UAAWF,EAAQd,KAA/B,SAAsCF,EAAYE,OAClD,eAACkB,EAAA,EAAD,CAAYF,UAAWF,EAAQJ,SAAUS,cAAY,EAArD,UACGrB,EAAYI,MAAMkB,OAAO,MAD5B,IACoCtB,EAAYK,IAAIiB,OAAO,SAE3D,cAACF,EAAA,EAAD,CACEF,UAAWF,EAAQb,SACnBoB,UAAU,IACVC,MAAM,gBAHR,SAKGxB,EAAYG,iB,kDC5BjBsB,EAAkB,WACtB,OAAIC,UAAUC,SAASC,WAAW,MACzB,KAEF,MAQHC,EAAkBC,wBAAsC,CAC5DH,SAAU,KACVI,YAAa,eA2BFC,EAAc,kBAAMC,qBAAWJ,IAY/BK,EAAgD,SAAC,GAAkB,IAT9EC,EAS8DC,EAAe,EAAfA,SAAe,EAnC/C,WAG1B,IAAD,EAC6BC,0BAC9BC,aACA,WACAb,KAJC,mBACIE,EADJ,KACcI,EADd,KAOH,MAAiB,OAAbJ,GAAkC,OAAbA,EAChB,CACLF,IACAM,GAIG,CACLJ,EACAI,GAiB8BQ,GAD6C,mBACtEZ,EADsE,KAC5DI,EAD4D,KAG7E,OACE,cAACF,EAAgBW,SAAjB,CAA0BC,MAAO,CAAEd,WAAUI,eAA7C,SACE,cAAC,IAAD,CAEEW,UAhBNP,EAgBgCR,EAd5BQ,EAAOP,WAAW,MACb,2BAAKe,GAAmBC,GAExBD,GAYHR,OAAQR,EAHV,SAKGS,GAJIT,MC5DPkB,EAAuC,yBAEvCC,EAAmC,WACvC,IACE,IAAMC,EAAOC,eAAeC,QAAQJ,GACpC,OAAa,OAATE,EACK,GAEFG,KAAKC,MAAMJ,GAClB,MAAOK,GAEP,OADA1D,QAAQ2D,MAAMD,GACP,KAwBEE,EAA0B,uCAAG,WACxCtD,EACAuD,EACA5B,EACA6B,GAJwC,uBAAA7E,EAAA,yDAMxCe,QAAQC,IAAI,uCACN8D,EAAMtE,MACNuE,EAAUC,KAAKC,IAAI5D,EAAYI,MAAMyD,KAAKJ,EAAK,WAAY,GAE3DK,EAAeN,EAAKO,cACxB,CAAE9D,GAAI,gBACN,CACEyD,QAASA,EACT1D,YAAaA,EAAYE,QAIzBqD,EAAQS,mBAlB4B,gCAmBDC,aAAaC,oBAnBZ,OAoBP,YApBO,QAqBpC,IAAID,aAAaH,GArBmB,OAyBpCP,EAAQY,qBACJC,EAAQC,gBACXC,YACAC,QAAO,SAACH,GAAD,OAAWA,EAAMI,KAAK5C,WAAWD,MAAW,IAEhD8C,EAAY,IAAIC,yBAAyBZ,IACrCM,MAAQA,EAClBC,gBAAgBM,MAAMF,IApDexE,EAuDPD,EAAYC,GAtD5C+C,eAAe4B,QACb/B,EACAK,KAAK2B,UAAU/B,IAAmCgC,OAAO7E,KAiBnB,kCApBF,IAACA,IAoBC,OAAH,4DAsCjC8E,EAAkB,SACtBxB,EACAvD,GAEA,IAAMgF,EAAYC,mBACZzB,EAAO0B,cACLvD,EAAaK,IAAbL,SAERwD,qBAAU,WAOR,GANIH,EAAUI,UACZ1F,QAAQC,IAAI,gBACZ0F,aAAaL,EAAUI,SACvBJ,EAAUI,aAAUE,GAGlBtF,EAAa,CACf,IAAMyD,EAAMtE,MACNoG,EAAe5B,KAAKC,IACxB5D,EAAYI,MAAMyD,KAAKJ,EAAK,gBACH,GAAvBF,EAAQiC,aAAoB,IAC9B,IAEF9F,QAAQC,IAAI,MAAO8D,GACnB/D,QAAQC,IAAI,oBAAqBK,EAAYI,OAC7CV,QAAQC,IAAI,8BAA+B4F,EAAcvF,GACzDN,QAAQC,IACN,wBACA4F,EAAe,IAAO,GACtBvF,GAEFgF,EAAUI,QAAUK,WAClBnC,EACAiC,EACAvF,EACAuD,EACA5B,EACA6B,MAGH,CAAC7B,EAAU6B,EAAMxD,EAAauD,K,6HC3G7BmC,EAAe,uCAAG,WAAOC,GAAP,qBAAAhH,EAAA,4DAEJ,6BACA,2BACZiH,EAAcD,EAAIE,UAFN,6BAGNC,OACVH,EAAIG,OAHY,2BAGOA,QAEnBC,EAAiBH,EAAYI,WAAW,KAAM,IAAIA,WAAW,KAAM,IAEzEtG,QAAQC,IAAIoG,GAENE,EAAkBC,OAAOC,KAAKJ,GAE9BK,EAAYC,EAAOJ,GAdH,kBAgBfC,OAAOI,OAAOC,OAAOC,UAC1B,OACAJ,EACA,CACElG,KAAM,WACNuG,KAAM,UAGR,EACA,CAAC,aAzBmB,2CAAH,sDAiCfJ,EAAS,SAACK,GAGd,IAFA,IAAMC,EAAM,IAAIC,YAAYF,EAAIZ,QAC1Be,EAAU,IAAIC,WAAWH,GACtBI,EAAI,EAAGC,EAASN,EAAIZ,OAAQiB,EAAIC,EAAQD,IAC/CF,EAAQE,GAAKL,EAAIO,WAAWF,GAE9B,OAAOJ,GAGHO,GAAS,SAACC,GAId,IAHA,IAAIC,EAAS,GACTC,EAAQ,IAAIP,WAAWK,GACvBG,EAAMD,EAAME,WACPR,EAAI,EAAGA,EAAIO,EAAKP,IACvBK,GAAUI,OAAOC,aAAaJ,EAAMN,IAEtC,OAAOb,OAAOwB,KAAKN,IASRO,GAAO,uCAAG,WAAOC,GAAP,mBAAAjJ,EAAA,sEACG+G,EA5ER,gzBA2EK,cACfmC,EADe,OAEfC,EAAM,IAAIC,YAFK,SAIU7B,OAAOI,OAAOC,OAAOoB,QAhEpC,WAkEdE,EACAC,EAAIE,OAAOJ,IAPQ,cAIfK,EAJe,yBASdf,GAAOe,IATO,2CAAH,sDC/Dd3H,GAAYC,aAAW,SAAC2H,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACN/H,OAAQwH,EAAMG,QAAQ,GACtBK,gBAAiBR,EAAMS,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPX,UAAWF,EAAMG,QAAQ,IAE3BW,OAAQ,CACNtI,OAAQwH,EAAMG,QAAQ,EAAG,EAAG,IAE9BhF,MAAO,CACL7B,MAAO,WASEyH,GAAQ,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,QAC7BnI,EAAUV,KAEV8I,EAAcnE,iBAAyB,MACvCoE,EAAcpE,iBAAyB,MAc7C,OACE,eAACqE,EAAA,EAAD,CAAW/H,UAAU,OAAOgI,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,sBAAKtI,UAAWF,EAAQmH,MAAxB,UACE,cAACsB,EAAA,EAAD,CAAQvI,UAAWF,EAAQyH,OAA3B,SACE,cAAC,IAAD,MAEF,cAACrH,EAAA,EAAD,CAAYG,UAAU,KAAKmI,QAAQ,KAAnC,qBAGA,uBAAMxI,UAAWF,EAAQ8H,KAAMa,YAAU,EAAzC,UACE,cAACC,EAAA,EAAD,CACEC,SAAUT,EACVM,QAAQ,WACRhJ,OAAO,SACPoJ,UAAQ,EACRC,WAAS,EACT9J,GAAG,WACH+J,MAAM,WACNC,aAAa,WACbC,WAAS,IAEX,cAACN,EAAA,EAAD,CACEC,SAAUR,EACVK,QAAQ,WACRhJ,OAAO,SACPoJ,UAAQ,EACRC,WAAS,EACTC,MAAM,WACNvK,KAAK,WACLQ,GAAG,WACHgK,aAAa,qBAEf,cAACE,EAAA,EAAD,CACE1K,KAAK,SACLsK,WAAS,EACTL,QAAQ,YACRlI,MAAM,UACNN,UAAWF,EAAQgI,OACnBjI,QAnDM,WAAO,IAAD,QACpBrB,QAAQC,IAAI,sBAAuByJ,EAAYhE,SAC/C1F,QAAQC,IAAI,QAAZ,oBAAqByJ,EAAYhE,eAAjC,aAAqB,EAAqB3C,aAA1C,QAAmD,IAEnDkF,GAAO,oBAAC0B,EAAYjE,eAAb,aAAC,EAAqB3C,aAAtB,QAA+B,IAAI2H,MAAK,SAACC,GAAe,IAAD,IAC5DlB,EAAQ,CACNpK,SAAQ,oBAAEqK,EAAYhE,eAAd,aAAE,EAAqB3C,aAAvB,QAAgC,GACxCzD,SAAUqL,QAsCR,qBAUCnB,GACC,cAACoB,EAAA,EAAD,CAAgBpJ,UAAWF,EAAQqC,MAAnC,kDCzEN/C,GAAYC,aAAW,SAAC2H,GAAD,OAC3BqC,YAAa,CACX/J,KAAM,CACJgK,SAAU,GAEZC,WAAY,CACVC,YAAaxC,EAAMG,QAAQ,IAE7BsC,MAAO,CACLH,SAAU,QAKVjH,GAA2B,CAC/BS,oBAAoB,EACpBG,oBAAoB,EACpBqB,aAAc,GA6FDoF,OA1Ff,WAAgB,IAAD,EAITvI,0BAAiCW,eAAgB,kBAAmB,CACtEjE,SAAU,GACVC,SAAU,KANC,mBAEXN,EAFW,KAGXmM,EAHW,ONzBgB,SAC7BnM,GAC2B,IAAD,EACEoM,mBAAgC,CAC1DC,aAAc,GACdC,SAAS,EACTC,SAAuC,KAA7BvM,EAAgBK,SAC1BmM,qBAAqB,IALG,mBACnBC,EADmB,KACXC,EADW,KAyC1B,OAjCAjG,qBAAU,WACyB,KAA7BzG,EAAgBK,SAClBqM,EAAU,CACRL,aAAc,GACdC,SAAS,EACTC,UAAU,EACVC,qBAAqB,IAGvBzM,EAAkBC,GACf0L,MAAK,SAACiB,GAEHD,EADE,SAAUC,EACF,CACRN,aAAc,GACdC,SAAS,EACTC,UAAU,EACVC,qBAAqB,GAGb,CACRH,aAAcM,EACdL,SAAS,EACTC,UAAU,EACVC,qBAAqB,OAI1BI,OAAM,SAACC,GACN7L,QAAQ2D,MAAM,+BAAgCkI,QAGnD,CAAC7M,IAEGyM,EMTiDK,CACtD9M,GADMqM,EATK,EASLA,aAAcE,EATT,EASSA,SAAUC,EATnB,EASmBA,oBAI1BlK,EAAUV,MH5BoB,SACpCmL,EACAlI,GAEA,IAAMmI,EAAU5I,IAChBpD,QAAQC,IAAI,WAAY+L,GACxB,IAAMjI,EAAMtE,MACN4L,EAAeU,EAClBlH,QAAO,SAACvE,GAAD,OAAsD,IAArC0L,EAAQC,QAAQ3L,EAAYC,OACpDsE,QAAO,SAACvE,GAAD,OAAiBA,EAAYK,IAAIuL,QAAQnI,MACnDsB,EAAgBxB,EAASwH,EAAa,IGoBtCc,CAAuBd,EAAcxH,IACrC,IAAMC,EAAO0B,cAhBA,EAiBqBlD,IAA1BL,EAjBK,EAiBLA,SAAUI,EAjBL,EAiBKA,YAYlB,OAJAoD,qBAAU,WACRlB,aAAaC,uBAGX+G,EAEA,8BACE,iCACE,qCACE,qBAAK/J,UAAWF,EAAQR,KAAxB,SACE,cAACsL,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAAC5K,EAAA,EAAD,CACEsI,QAAQ,KACRxI,UAAWF,EAAQ2J,QAErB,cAACsB,EAAA,EAAD,CAAavC,QAAQ,WAArB,SACE,eAACwC,EAAA,EAAD,CACEC,QAAQ,kCACRlM,GAAG,4BACHwC,MAAOd,EACPyK,SA3BS,SAC3BC,GAEAtK,EAAYsK,EAAMC,OAAO7J,QAoBT,UAME,cAAC8J,EAAA,EAAD,CAAU9J,MAAM,KAAhB,qBACA,cAAC8J,EAAA,EAAD,CAAU9J,MAAM,KAAhB,0BAGJ,eAAC0H,EAAA,EAAD,CACE3I,MAAM,UACNT,QAAS,kBACP8J,EAAmB,CAAE9L,SAAU,GAAIC,SAAU,MAHjD,oBAMUN,EAAgBK,mBAK/BgM,EAAalL,KAAI,SAACG,EAAawM,GAC9B,OACE,cAAC,EAAD,CAEExM,YAAaA,EACbe,QAAS,SAACf,GACRsD,EACEtD,EACAuD,GACA5B,EACA6B,KAPCgJ,aAmBjB,cAAC,GAAD,CAAOtD,YAAagC,EAAqB/B,QAAS0B,KCxHzC4B,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBvC,MAAK,YAAkD,IAA/CwC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDVO,GAAkBC,EAAQ,KAC9B/N,IAAMgO,OAAOF,IAEbG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.a38bc3dd.chunk.js","sourcesContent":["import axios from \"axios\";\nimport dayjs, { Dayjs } from \"dayjs\";\nimport { useEffect, useState } from \"react\";\n\nexport interface Appointment {\n  id: string;\n  name: string;\n  start: Dayjs;\n  end: Dayjs;\n  location?: string;\n}\n\nexport interface UseAppointmentsResult {\n  appointments: Appointment[];\n  loading: boolean;\n  loggedIn: boolean;\n  authorizationFailed: boolean;\n}\n\nexport interface UserCredentials {\n  username: string;\n  password: string;\n}\n\nexport const useAppointments = (\n  userCredentials: UserCredentials\n): UseAppointmentsResult => {\n  const [result, setResult] = useState<UseAppointmentsResult>({\n    appointments: [],\n    loading: false,\n    loggedIn: userCredentials.username !== \"\",\n    authorizationFailed: false,\n  });\n\n  useEffect(() => {\n    if (userCredentials.username === \"\") {\n      setResult({\n        appointments: [],\n        loading: false,\n        loggedIn: false,\n        authorizationFailed: false,\n      });\n    } else {\n      queryAppointments(userCredentials)\n        .then((queryResult) => {\n          if (\"type\" in queryResult) {\n            setResult({\n              appointments: [],\n              loading: false,\n              loggedIn: false,\n              authorizationFailed: true,\n            });\n          } else {\n            setResult({\n              appointments: queryResult,\n              loading: false,\n              loggedIn: true,\n              authorizationFailed: false,\n            });\n          }\n        })\n        .catch((reason) => {\n          console.error(\"Failed to query appointments\", reason);\n        });\n    }\n  }, [userCredentials]);\n\n  return result;\n};\n\ninterface GenesisAppointment {\n  id: string;\n  name: string;\n  start: string;\n  end: string;\n  location?: string;\n}\n\ninterface NotAuthenticated {\n  type: \"NotAuthenticated\";\n}\n\nconst SERVICE_URI =\n  \"https://qc3hx0qepd.execute-api.eu-central-1.amazonaws.com/Prod/appointments/\";\n\nconst queryAppointments = async (\n  userCredentials: UserCredentials\n): Promise<Appointment[] | NotAuthenticated> => {\n  const response = await axios.get<GenesisAppointment[]>(SERVICE_URI, {\n    auth: {\n      username: userCredentials.username,\n      password: userCredentials.password,\n    },\n    params: {\n      startOfToday: dayjs().startOf(\"day\").toISOString(),\n    },\n    validateStatus: () => true,\n  });\n\n  if (response.status === 401) {\n    return {\n      type: \"NotAuthenticated\",\n    };\n  }\n  if (response.status === 200) {\n    console.log(\"response\", response.data);\n    return response.data.map(convertGenesisAppointments);\n  }\n  throw Error(\"unexpected status \" + response.status);\n};\n\nconst convertGenesisAppointments = (\n  appointment: GenesisAppointment\n): Appointment => ({\n  id: appointment.id,\n  name: appointment.name,\n  location: appointment.location,\n  start: dayjs(appointment.start),\n  end: dayjs(appointment.end),\n});\n\nconst sample: Appointment[] = [\n  {\n    id: \"#0\",\n    name: \"Daily\",\n    start: dayjs(\"2021-03-22T09:00:00.000Z\"),\n    end: dayjs(\"2021-03-12T10:45:00.000Z\"),\n    location:\n      \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\",\n  },\n  {\n    id: \"#1\",\n    name: \"itdesign Town Hall D\",\n    start: dayjs(\"2021-03-22T17:30:00.000Z\"),\n    end: dayjs(\"2021-03-12T07:45:00.000Z\"),\n    location:\n      \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\",\n  },\n  {\n    id: \"#2\",\n    name: \"itdesign Town Hall D\",\n    start: dayjs(\"2021-03-22T17:30:00.000Z\"),\n    end: dayjs(\"2021-03-12T07:45:00.000Z\"),\n    location: \"https://teams.microsoft.com/l/channel/....\",\n  },\n  {\n    id: \"#3\",\n    name: \"Guardians of the GraphQL Federation\",\n    start: dayjs(\"2021-03-22T18:30:00.000Z\"),\n    end: dayjs(\"2021-03-12T13:00:00.000Z\"),\n  },\n];\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Appointment } from \"./useAppointments\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 600,\n    margin: \"1em\",\n  },\n  name: {\n    fontSize: \"1.5em\",\n  },\n  startEnd: {\n    fontSize: \"1em\",\n  },\n  location: {\n    textAlign: \"left\",\n    fontSize: \"1em\",\n  },\n});\n\nexport const AppointmentCard: React.FC<{\n  appointment: Appointment;\n  onClick: (appointment: Appointment) => void;\n}> = ({ appointment, onClick }) => {\n  const classes = useStyles();\n  return (\n    <Card className={classes.root} onClick={() => onClick(appointment)}>\n      <CardContent>\n        <Typography className={classes.name}>{appointment.name}</Typography>\n        <Typography className={classes.startEnd} gutterBottom>\n          {appointment.start.format(\"LT\")} {appointment.end.format(\"LT\")}\n        </Typography>\n        <Typography\n          className={classes.location}\n          component=\"p\"\n          color=\"textSecondary\"\n        >\n          {appointment.location}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n","import React, {\n  createContext,\n  Dispatch,\n  SetStateAction,\n  useContext,\n} from \"react\";\nimport { IntlProvider } from \"react-intl\";\nimport { useStorageState } from \"react-storage-hooks\";\nimport translationsEn from \"./translations.json\";\nimport translationsDe from \"./translations_de.json\";\n\nexport type AvailableLanguages = \"de\" | \"en\";\n\nconst browserLanguage = (): AvailableLanguages => {\n  if (navigator.language.startsWith(\"de\")) {\n    return \"de\";\n  }\n  return \"en\";\n};\n\ninterface LanguageContextContent {\n  language: AvailableLanguages;\n  setLanguage: Dispatch<SetStateAction<AvailableLanguages>>;\n}\n\nconst LanguageContext = createContext<LanguageContextContent>({\n  language: \"en\",\n  setLanguage: () => {},\n});\n//export const useAnalytics: () => AvailableLanguages = () => useContext(LanguageContext);\n\nconst useLocalStorageLanguage = (): [\n  AvailableLanguages,\n  Dispatch<SetStateAction<AvailableLanguages>>\n] => {\n  const [language, setLanguage] = useStorageState<string>(\n    localStorage,\n    \"language\",\n    browserLanguage()\n  );\n\n  if (language !== \"de\" && language !== \"en\") {\n    return [\n      browserLanguage(),\n      setLanguage as Dispatch<SetStateAction<AvailableLanguages>>,\n    ];\n  }\n\n  return [\n    language,\n    setLanguage as Dispatch<SetStateAction<AvailableLanguages>>,\n  ];\n};\n\nexport const useLanguage = () => useContext(LanguageContext);\n\nexport const resolveMessages = (\n  locale: string\n): typeof translationsEn | typeof translationsDe => {\n  if (locale.startsWith(\"de\")) {\n    return { ...translationsEn, ...translationsDe };\n  } else {\n    return translationsEn;\n  }\n};\n\nexport const LanguageProvider: React.FunctionComponent<{}> = ({ children }) => {\n  const [language, setLanguage] = useLocalStorageLanguage();\n\n  return (\n    <LanguageContext.Provider value={{ language, setLanguage }}>\n      <IntlProvider\n        key={language}\n        messages={resolveMessages(language)}\n        locale={language}\n      >\n        {children}\n      </IntlProvider>\n    </LanguageContext.Provider>\n  );\n};\n","import { useEffect, useRef } from \"react\";\nimport dayjs from \"dayjs\";\nimport { Appointment } from \"./useAppointments\";\nimport { IntlShape, useIntl } from \"react-intl\";\nimport { AvailableLanguages, useLanguage } from \"./i18n/Language\";\n\nexport interface ReminderOptions {\n  visualNotification: boolean;\n  speechNotification: boolean;\n  mintesBefore: number;\n}\n\nconst ALREADY_REMINDED_APPOINTMENT_IDS_KEY = \"remindedAppointmentIds\";\n\nconst getAlreadyRemindedAppointmentIds = (): string[] => {\n  try {\n    const json = sessionStorage.getItem(ALREADY_REMINDED_APPOINTMENT_IDS_KEY);\n    if (json === null) {\n      return [];\n    }\n    return JSON.parse(json);\n  } catch (e) {\n    console.error(e);\n    return [];\n  }\n};\n\nconst addAlreadyRemindedAppointmentId = (id: string): void => {\n  sessionStorage.setItem(\n    ALREADY_REMINDED_APPOINTMENT_IDS_KEY,\n    JSON.stringify(getAlreadyRemindedAppointmentIds().concat(id))\n  );\n};\n\nexport const useAppointmentReminder = (\n  sortedAppointments: Appointment[],\n  options: ReminderOptions\n) => {\n  const skipIds = getAlreadyRemindedAppointmentIds();\n  console.log(\"skipping\", skipIds);\n  const now = dayjs();\n  const appointments = sortedAppointments\n    .filter((appointment) => skipIds.indexOf(appointment.id) === -1)\n    .filter((appointment) => appointment.end.isAfter(now));\n  useFixedTimeout(options, appointments[0]);\n};\n\nexport const appointmentReminderHandler = async (\n  appointment: Appointment,\n  options: ReminderOptions,\n  language: AvailableLanguages,\n  intl: IntlShape\n): Promise<void> => {\n  console.log(\"entering appointmentREminderhandler\");\n  const now = dayjs();\n  const minutes = Math.max(appointment.start.diff(now, \"minutes\"), 0);\n\n  const notification = intl.formatMessage(\n    { id: \"notification\" },\n    {\n      minutes: minutes,\n      appointment: appointment.name,\n    }\n  );\n\n  if (options.visualNotification) {\n    const notificationPermission = await Notification.requestPermission();\n    if (notificationPermission === \"granted\") {\n      new Notification(notification);\n    }\n  }\n\n  if (options.speechNotification) {\n    const voice = speechSynthesis\n      .getVoices()\n      .filter((voice) => voice.lang.startsWith(language))[0];\n\n    const utterance = new SpeechSynthesisUtterance(notification);\n    utterance.voice = voice;\n    speechSynthesis.speak(utterance);\n  }\n\n  addAlreadyRemindedAppointmentId(appointment.id);\n};\n\nconst useFixedTimeout = (\n  options: ReminderOptions,\n  appointment?: Appointment\n) => {\n  const handleRef = useRef<number | undefined>();\n  const intl = useIntl();\n  const { language } = useLanguage();\n\n  useEffect(() => {\n    if (handleRef.current) {\n      console.log(\"cleartimeout\");\n      clearTimeout(handleRef.current);\n      handleRef.current = undefined;\n    }\n\n    if (appointment) {\n      const now = dayjs();\n      const milliseconds = Math.max(\n        appointment.start.diff(now, \"milliseconds\") -\n          options.mintesBefore * 60 * 1000,\n        10\n      );\n      console.log(\"now\", now);\n      console.log(\"appointment.start\", appointment.start);\n      console.log(\"set timeout in milliseconds\", milliseconds, appointment);\n      console.log(\n        \"set timeout in mintes\",\n        milliseconds / 1000 / 60,\n        appointment\n      );\n      handleRef.current = setTimeout(\n        appointmentReminderHandler,\n        milliseconds,\n        appointment,\n        options,\n        language,\n        intl\n      );\n    }\n  }, [language, intl, appointment, options]);\n};\n","const publicKeyPEM = `-----BEGIN PUBLIC KEY-----\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAvs6MzyjUPt9ms4wrEB43\nW8eO1nPR4KYLVsX9oqP22BZnQZIQfbIw5g8iNlS4TmSwgENrxh/eEkKl48OV2VcI\nkWKNa4uELHkivZDCrVqmoomhCgCBBT957a4OBYFaTetHpwREcyiW8aboze8RS8Ar\nBfSoqDeWZ6JRYGsT1N57uaeQutRnewf6djaXSA/GddWo+H+6wRoSXYvrzhU0ooG4\ngby0CTaWe01UX9P3MJ1sbs5eEfKa8gnYC1hA/lMtifHO/vup0jzvHoSfI6inNGDe\nGFA6o8fa1LrkJK5/CCH90aWgJmKNkQymIgfs751lcIymrceM9k788Hmd1WFLE28m\nU30YcbSplad5vCKaUYWk0uFCc+nAG/ZXKJD94HZiQFZW2ZgFUdWCWJUaLTfKi2pF\n1/MByPv0wGjD89hppgueX7sWZplZF3o8AQbsFu0J+a98qDmUDaiajysMJkwxaxHk\no/vONSkkjwFb/j2NDlt302clW46e+c7WTFfTu2UVd+ek30GljpIvgJ+G5PKs4tww\nncjO9icRCY1rEwufSx0SfM5R5zQp/pTbU+vvf9vT87OLCd2pnmqjwSe6Ron8sw7T\nSdDNC/eVGZ20EH6MKDL8N9k79SAiCqwNywM8s7ZgrJAaSt2jgI00itm+UqhFn35l\n039+We5mDRF1bU4rc8iP4pkCAwEAAQ==\n-----END PUBLIC KEY-----`;\n\nconst ALGORITHM = \"RSA-OAEP\";\n\nconst importPublicKey = async (pem: string): Promise<CryptoKey> => {\n  // fetch the part of the PEM string between header and footer\n  const pemHeader = \"-----BEGIN PUBLIC KEY-----\";\n  const pemFooter = \"-----END PUBLIC KEY-----\";\n  const pemContents = pem.substring(\n    pemHeader.length,\n    pem.length - pemFooter.length\n  );\n  const withoutNewLine = pemContents.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");\n\n  console.log(withoutNewLine);\n  // base64 decode the string to get the binary data\n  const binaryDerString = window.atob(withoutNewLine);\n  // convert from a binary string to an ArrayBuffer\n  const binaryDer = str2ab(binaryDerString);\n\n  return window.crypto.subtle.importKey(\n    \"spki\",\n    binaryDer,\n    {\n      name: \"RSA-OAEP\",\n      hash: \"SHA-1\",\n      //hash: \"SHA-256\", // FIXME: do not use SHA-1 try stackoverflow.com/questions/49455131/encrypt-in-nodejs-and-decrypt-on-the-client-using-webcrypto-api\n    },\n    true,\n    [\"encrypt\"]\n  );\n};\n\n/*\nConvert a string into an ArrayBuffer\nfrom https://developers.google.com/web/updates/2012/06/How-to-convert-ArrayBuffer-to-and-from-String\n*/\nconst str2ab = (str: string): ArrayBuffer => {\n  const buf = new ArrayBuffer(str.length);\n  const bufView = new Uint8Array(buf);\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\nconst ab2str = (buffer: ArrayBuffer): string => {\n  let binary = \"\";\n  let bytes = new Uint8Array(buffer);\n  let len = bytes.byteLength;\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return window.btoa(binary);\n};\n\n/*\nImport a PEM encoded RSA private key, to use for RSA-PSS signing.\nTakes a string containing the PEM encoded key, and returns a Promise\nthat will resolve to a CryptoKey representing the private key.\n*/\n\nexport const encrypt = async (text: string): Promise<string> => {\n  const publicKey = await importPublicKey(publicKeyPEM);\n  const enc = new TextEncoder();\n\n  const encodedEncrypted = await window.crypto.subtle.encrypt(\n    ALGORITHM,\n    publicKey,\n    enc.encode(text)\n  );\n  return ab2str(encodedEncrypted);\n};\n","import React, { useRef } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { FormHelperText } from \"@material-ui/core\";\nimport { encrypt } from \"./encrypt\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  error: {\n    color: \"red\",\n  },\n}));\n\nexport interface LoginProps {\n  loginFailed: boolean;\n  onLogin: (userCredentials: { username: string; password: string }) => void;\n}\n\nexport const Login = ({ loginFailed, onLogin }: LoginProps) => {\n  const classes = useStyles();\n\n  const usernameRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n\n  const onClick = () => {\n    console.log(\"usernameRef.current\", usernameRef.current);\n    console.log(\"value\", usernameRef.current?.value ?? \"\");\n\n    encrypt(passwordRef.current?.value ?? \"\").then((encrypted) => {\n      onLogin({\n        username: usernameRef.current?.value ?? \"\",\n        password: encrypted,\n      });\n    });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            inputRef={usernameRef}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            autoComplete=\"username\"\n            autoFocus\n          />\n          <TextField\n            inputRef={passwordRef}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={onClick}\n          >\n            Sign In\n          </Button>\n          {loginFailed && (\n            <FormHelperText className={classes.error}>\n              Username or password wrong\n            </FormHelperText>\n          )}\n        </form>\n      </div>\n    </Container>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport {\n  Appointment,\n  useAppointments,\n  UserCredentials,\n} from \"./useAppointments\";\nimport { AppointmentCard } from \"./AppointmentCard\";\nimport {\n  appointmentReminderHandler,\n  ReminderOptions,\n  useAppointmentReminder,\n} from \"./useAppointmentReminder\";\nimport {\n  AppBar,\n  Button,\n  createStyles,\n  FormControl,\n  makeStyles,\n  MenuItem,\n  Select,\n  Theme,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { Login } from \"./Login\";\nimport { useStorageState } from \"react-storage-hooks\";\nimport { useIntl } from \"react-intl\";\nimport { useLanguage } from \"./i18n/Language\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  })\n);\n\nconst options: ReminderOptions = {\n  visualNotification: true,\n  speechNotification: true,\n  mintesBefore: 1,\n};\n\nfunction App() {\n  const [\n    userCredentials,\n    setUserCredentials,\n  ] = useStorageState<UserCredentials>(sessionStorage, \"userCredentials\", {\n    username: \"\",\n    password: \"\",\n  });\n\n  const { appointments, loggedIn, authorizationFailed } = useAppointments(\n    userCredentials\n  );\n\n  const classes = useStyles();\n\n  useAppointmentReminder(appointments, options);\n  const intl = useIntl();\n  const { language, setLanguage } = useLanguage();\n\n  const handleLanguageChange = (\n    event: React.ChangeEvent<{ value: unknown }>\n  ) => {\n    setLanguage(event.target.value as \"en\" | \"de\");\n  };\n\n  useEffect(() => {\n    Notification.requestPermission();\n  });\n\n  if (loggedIn) {\n    return (\n      <div>\n        <header>\n          <>\n            <div className={classes.root}>\n              <AppBar position=\"static\">\n                <Toolbar>\n                  <Typography\n                    variant=\"h6\"\n                    className={classes.title}\n                  ></Typography>\n                  <FormControl variant=\"outlined\">\n                    <Select\n                      labelId=\"demo-simple-select-filled-label\"\n                      id=\"demo-simple-select-filled\"\n                      value={language}\n                      onChange={handleLanguageChange}\n                    >\n                      <MenuItem value=\"en\">English</MenuItem>\n                      <MenuItem value=\"de\">Deutsch</MenuItem>\n                    </Select>\n                  </FormControl>\n                  <Button\n                    color=\"inherit\"\n                    onClick={() =>\n                      setUserCredentials({ username: \"\", password: \"\" })\n                    }\n                  >\n                    Logout {userCredentials.username}\n                  </Button>\n                </Toolbar>\n              </AppBar>\n            </div>\n            {appointments.map((appointment, index) => {\n              return (\n                <AppointmentCard\n                  key={index}\n                  appointment={appointment}\n                  onClick={(appointment: Appointment) => {\n                    appointmentReminderHandler(\n                      appointment,\n                      options,\n                      language,\n                      intl\n                    );\n                  }}\n                />\n              );\n            })}\n          </>\n        </header>\n      </div>\n    );\n  } else {\n    return (\n      <Login loginFailed={authorizationFailed} onLogin={setUserCredentials} />\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport dayjs from \"dayjs\";\nimport { LanguageProvider } from \"./i18n/Language\";\n\nvar localizedFormat = require(\"dayjs/plugin/localizedFormat\");\ndayjs.extend(localizedFormat);\n\nReactDOM.render(\n  <React.StrictMode>\n    <LanguageProvider>\n      <App />\n    </LanguageProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}